Index: app/src/main/res/layout-v21/map_frag.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:layout_height=\"match_parent\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\"\n        android:weightSum=\"10\">\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginStart=\"40dp\"\n            android:orientation=\"horizontal\">\n        <AutoCompleteTextView\n            android:id=\"@+id/autoCompleteTextViewMap\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:ems=\"10\"\n            android:layout_weight=\"10\"\n            style=\"@android:style/Widget.Material.Light.SearchView\"\n            android:layout_gravity=\"top\"\n            android:paddingStart=\"10dp\"\n            android:layout_margin=\"2dp\"\n            android:background=\"@drawable/bg_rect_tab\"\n            android:hint=\"google search address\"\n            tools:ignore=\"RtlSymmetry\" />\n        <ImageButton\n            android:id=\"@+id/imageButton35\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"50dp\"\n            android:layout_gravity=\"right\"\n            android:layout_weight=\"90\"\n            android:background=\"@android:color/transparent\"\n            app:srcCompat=\"@drawable/filter1\" />\n        </LinearLayout>\n        <LinearLayout\n        android:layout_height=\"match_parent\"\n        android:layout_width=\"match_parent\"\n            android:orientation=\"vertical\"\n            android:layout_weight=\"9\"\n            android:layout_marginTop=\"5dp\"\n        android:weightSum=\"10\">\n        <fragment\n            android:id=\"@+id/map\"\n            android:name=\"com.google.android.gms.maps.SupportMapFragment\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            tools:context=\".MapsActivity\" />\n    </LinearLayout>\n\n\n    </LinearLayout>\n\n\n</FrameLayout>\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-v21/map_frag.xml	(revision 68d9d9a9018671e28448b6dd941bdaf37cf916af)
+++ app/src/main/res/layout-v21/map_frag.xml	(date 1608365141901)
@@ -16,7 +16,23 @@
             android:layout_height="wrap_content"
             android:layout_marginStart="40dp"
             android:orientation="horizontal">
-        <AutoCompleteTextView
+            <SearchView
+                android:id="@+id/location2"
+                style="@android:style/Widget.Material.Light.SearchView"
+                android:layout_width="match_parent"
+                android:layout_height="35dp"
+                android:layout_gravity="top"
+                android:textSize="14sp"
+                android:layout_weight="10"
+                android:layout_margin="5dp"
+                android:background="@drawable/bg_rect_tab"
+                android:iconifiedByDefault="false"
+                android:queryHint="Search.."
+                android:textCursorDrawable="@drawable/text_cursor"
+                android:visibility="visible"
+                tools:ignore="NewApi" />
+
+            <AutoCompleteTextView
             android:id="@+id/autoCompleteTextViewMap"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
@@ -26,6 +42,7 @@
             android:layout_gravity="top"
             android:paddingStart="10dp"
             android:layout_margin="2dp"
+            android:visibility="gone"
             android:background="@drawable/bg_rect_tab"
             android:hint="google search address"
             tools:ignore="RtlSymmetry" />
Index: app/src/main/java/com/example/elshare/map_frag.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.elshare;\n\nimport android.app.AlertDialog;\nimport android.app.Dialog;\nimport android.app.ProgressDialog;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.SharedPreferences;\nimport android.graphics.Bitmap;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.preference.PreferenceManager;\nimport android.text.TextUtils;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.AdapterView;\nimport android.widget.ArrayAdapter;\nimport android.widget.AutoCompleteTextView;\nimport android.widget.Button;\nimport android.widget.CheckBox;\nimport android.widget.CompoundButton;\nimport android.widget.ImageButton;\nimport android.widget.LinearLayout;\nimport android.widget.ListView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.annotation.RequiresApi;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.GridLayoutManager;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.example.elshare.adapter.AvailabilityTimeSlotAdapter;\nimport com.example.elshare.adapter.ChargerTypeAdapter;\nimport com.example.elshare.adapter.GooglePlacesAutocompleteAdapter;\nimport com.example.elshare.adapter.SocketTypeAdapter;\nimport com.example.elshare.utils.SingletonRetrofit;\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.GoogleMap;\nimport com.google.android.gms.maps.OnMapReadyCallback;\nimport com.google.android.gms.maps.SupportMapFragment;\nimport com.google.android.gms.maps.model.BitmapDescriptor;\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.Marker;\nimport com.google.android.gms.maps.model.MarkerOptions;\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\nimport com.google.gson.Gson;\nimport com.google.gson.reflect.TypeToken;\nimport com.mohammedalaa.seekbar.DoubleValueSeekBarView;\nimport com.mohammedalaa.seekbar.OnDoubleValueSeekBarChangeListener;\nimport com.yahoo.mobile.client.android.util.rangeseekbar.RangeSeekBar;\n\nimport java.io.StringWriter;\nimport java.lang.reflect.Type;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport datamodel.APIInterface;\nimport datamodel.Connector_type;\nimport datamodel.MarkerData;\nimport datamodel.ShowAvailabilityPojo;\nimport datamodel.ShowAvailabilityProvider;\nimport datamodel.Socket;\nimport okhttp3.MediaType;\nimport okhttp3.RequestBody;\nimport retrofit2.Call;\nimport retrofit2.Callback;\nimport retrofit2.Response;\n\npublic class map_frag extends Fragment implements OnMapReadyCallback, AdapterView.OnItemClickListener\n{\n    ImageButton mapFilter;\n    private GoogleMap mMap;\n    Dialog pw;\n    ListView lv_languages;\n    BottomSheetDialog bottomSheetDialog;\n    ArrayAdapter list_adapter;\n    Dialog myDialog;\n    DoubleValueSeekBarView  rangeSeekBar;\n    GooglePlacesAutocompleteAdapter mGooglePlacesAutocompleteAdapter;\n    AutoCompleteTextView mAddressAutoCompleteTextView;\n    private Button apply_p,reset_b,price,avail,rate,rate_a,rate_r,avail_a,avail_r,price_a,price_r,show_list;\n     Boolean priceVisible;\n    Dialog viewDetailDialog;\n\n    RecyclerView recyclerView;\n    AvailabilityTimeSlotAdapter adapter;\n    RecyclerView.LayoutManager layoutManager;\n    ArrayList<String> time_array = new ArrayList<>();\n    ArrayList<String> day_array = new ArrayList<>();\n\n    RangeSeekBar seekBar;\n    RequestBody priceStartBody;\n    RequestBody priceEndBody;\n    RequestBody placeNameBody;\n    RequestBody socketDataBody;\n    RequestBody timeSlotBody;\n    RequestBody availableDayBody;\n    RequestBody chargerBody;\n\n    TextView chargerTypeText;\n    TextView socketTypeText;\n    TextView connetorText;\n    TextView priceText;\n    private List<MarkerData> markerData;\n    private MarkerData markerList;\n    private List<Connector_type> connetor_set;\n    private Connector_type my_connector;\n    private List<Socket> socket_set;\n    private Socket socketArray;\n\n    public int i;\n    SharedPreferences.Editor editor;\n    final ArrayList<String> chargerType = new ArrayList<>();\n    final ArrayList<String> socketType = new ArrayList<>();\n    ArrayList<String> selectedSocket = new ArrayList<>();\n    ArrayList<String> selectedCharger = new ArrayList<>();\n    ArrayList<String> availabilityDays = new ArrayList<>();\n    ArrayList<String> timeSlotArray = new ArrayList<>();\n    private ArrayList<CheckBox> checkBoxArrayList = new ArrayList<>();\n\n    View mapMarkerView ;\n\n\n    SocketTypeAdapter socketTypeAdapter;\n    ChargerTypeAdapter chargerTypeAdapter;\n    SupportMapFragment mapFragment;\n    Set set = new HashSet();\n\n    CheckBox monday;\n    CheckBox tuesday;\n    CheckBox wednesday;\n    CheckBox thursday;\n    CheckBox friday;\n    CheckBox satursday;\n    CheckBox sunday;\n    CheckBox morningTime;\n    CheckBox middayTime;\n    CheckBox afternoonTime;\n    CheckBox eveningTime;\n    CheckBox  nightTime;\n\n     String chargerString ;\n     String connectorTypeString;\n     String priceRateString;\n     String list_id;\n     SharedPreferences preferences;\n    @Nullable\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        final View rootView = inflater.inflate(R.layout.map_frag, container, false);\n        preferences = PreferenceManager.getDefaultSharedPreferences(getContext());\n\n        mapFilter = rootView.findViewById(R.id.imageButton35);\n        myDialog = new Dialog(getContext());\n        mAddressAutoCompleteTextView=rootView.findViewById(R.id.autoCompleteTextViewMap);\n        mGooglePlacesAutocompleteAdapter = new GooglePlacesAutocompleteAdapter(getContext(), R.layout.support_simple_spinner_dropdown_item);\n        mAddressAutoCompleteTextView.setAdapter(mGooglePlacesAutocompleteAdapter);\n        mAddressAutoCompleteTextView.setOnItemClickListener(this);\n         seekBar = new RangeSeekBar<Integer>(getContext());\n\n        mapFragment= (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map);\n        initialMarkers();\n\n        mapFilter.setOnClickListener(new View.OnClickListener() {\n            @RequiresApi(api = Build.VERSION_CODES.KITKAT)\n            @Override\n            public void onClick(View v) {\n\n                socketType.clear();\n                chargerType.clear();\n                final RecyclerView chargerTypeRecycleView;\n                final RecyclerView socketTypeRecycleView;\n                final TextView minText;\n                final TextView maxText;\n                Button mapFilterSortByPrice;\n                final LinearLayout priceLayout;\n                pw=new Dialog(v.getRootView().getContext(), R.style.PauseDialog);\n                pw.getWindow().setBackgroundDrawable(new ColorDrawable(Color.WHITE));\n                pw.setTitle(\"Map Filter\");\n                pw.setContentView(R.layout.filter_window);\n                minText=pw.findViewById(R.id.filterMinRange);\n                maxText=pw.findViewById(R.id.filterMaxRange);\n                priceLayout=pw.findViewById(R.id.pricesortLayout);\n                priceLayout.setVisibility(View.GONE);\n                priceVisible=true;\n                mapFilterSortByPrice=pw.findViewById(R.id.mapFilterSortByPrice);\n                mapFilterSortByPrice.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n                        if (priceVisible)\n                        {\n                            priceLayout.setVisibility(View.VISIBLE);\n                            priceVisible=false;\n                        }\n                        else\n                        {\n                            priceLayout.setVisibility(View.GONE);\n                            priceVisible=true;\n\n                        }\n\n                    }\n                });\n\n                 rangeSeekBar=pw.findViewById(R.id.double_range_seekbar);\n                rangeSeekBar.setOnRangeSeekBarViewChangeListener(new OnDoubleValueSeekBarChangeListener() {\n                    @Override\n                    public void onValueChanged(@Nullable DoubleValueSeekBarView seekBar, int min, int max, boolean fromUser) {\n\n                        Log.i(\"Min:\", String.valueOf(min));\n                        Log.i(\"Max:\", String.valueOf(max));\n                        minText.setText(String.valueOf(min));\n                        maxText.setText(String.valueOf(max));\n\n                    }\n\n                    @Override\n                    public void onStartTrackingTouch(@Nullable DoubleValueSeekBarView seekBar, int min, int max) {\n\n                    }\n\n                    @Override\n                    public void onStopTrackingTouch(@Nullable DoubleValueSeekBarView seekBar, int min, int max) {\n\n                    }\n                });\n                if (priceVisible) {\n                    priceStartBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), minText.getText().toString());\n                    priceEndBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), maxText.getText().toString());\n                }\n\n                monday=pw.findViewById(R.id.mapFilterMonday);\n                tuesday=pw.findViewById(R.id.mapFilterTuesday);\n                wednesday=pw.findViewById(R.id.mapFilterWednesday);\n                thursday=pw.findViewById(R.id.mapFilterThursday);\n                friday=pw.findViewById(R.id.mapFilterFriday);\n                satursday=pw.findViewById(R.id.mapFilterSatursday);\n                sunday=pw.findViewById(R.id.mapFilterSunday);\n                morningTime=pw.findViewById(R.id.mapFilterTimeMorning);\n                afternoonTime=pw.findViewById(R.id.mapFilterTimeAfternoon);\n                middayTime=pw.findViewById(R.id.mapFilterTimeMidDay);\n                eveningTime=pw.findViewById(R.id.mapFilterTimeEvening);\n                nightTime=pw.findViewById(R.id.mapFilterTimeOverNight);\n                mainatinStateOfCheckboxes(v);\n                monday.setChecked(preferences.getBoolean(\"monday\", false));\n                tuesday.setChecked(preferences.getBoolean(\"tuesday\", false));\n                wednesday.setChecked(preferences.getBoolean(\"wednesday\", false));\n                thursday.setChecked(preferences.getBoolean(\"thursday\", false));\n                friday.setChecked(preferences.getBoolean(\"friday\", false));\n                satursday.setChecked(preferences.getBoolean(\"satursday\", false));\n                sunday.setChecked(preferences.getBoolean(\"sunday\", false));\n\n                morningTime.setChecked(preferences.getBoolean(\"morning\", false));\n                middayTime.setChecked(preferences.getBoolean(\"midday\", false));\n                afternoonTime.setChecked(preferences.getBoolean(\"afternoon\", false));\n                eveningTime.setChecked(preferences.getBoolean(\"evening\", false));\n                nightTime.setChecked(preferences.getBoolean(\"overnight\", false));\n\n                monday.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                tuesday.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                wednesday.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                thursday.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                friday.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                satursday.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                sunday.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                morningTime.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                middayTime.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                afternoonTime.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                eveningTime.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n                nightTime.setOnCheckedChangeListener(new mSingleCheckBoxChangeListener());\n\n                chargerTypeRecycleView =pw.findViewById(R.id.mapFilterChargerType);\n                socketTypeRecycleView =pw.findViewById(R.id.mapFilterSocketType);\n\n\n                APIInterface service = SingletonRetrofit.getAPIInterface();\n                Call<List<Connector_type>> call = service.getConnectorMapFilter();\n                Log.i(\"Connector_api  : \", String.valueOf(call.request().url()));\n                call.enqueue(new Callback<List<Connector_type>>() {\n                    @Override\n                    public void onResponse(Call<List<Connector_type>> call, Response<List<Connector_type>> response) {\n                        if (response.body() != null) {\n                            Log.i(\"login response: \", String.valueOf(response.body()));\n                            connetor_set = response.body();\n                            if (connetor_set != null) {\n                                ArrayList make_array = (ArrayList) response.body();\n                                String demo_str = null;\n                                int i;\n                                for (i = 0; i < make_array.size(); i++) {\n                                    my_connector = connetor_set.get(i);\n                                    demo_str = my_connector.getConnectorType();\n                                    chargerType.add(demo_str);\n                                }\n                                chargerTypeRecycleView.setHasFixedSize(true);\n                                GridLayoutManager manager = new GridLayoutManager(getContext(), 2);\n                                chargerTypeRecycleView.setLayoutManager(manager);\n                                chargerTypeAdapter = new ChargerTypeAdapter(getContext(), chargerType);\n                                chargerTypeRecycleView.setAdapter(chargerTypeAdapter);\n                            }\n                        }\n                        else {\n\n                        }\n                    }\n\n                    @Override\n                    public void onFailure(Call<List<Connector_type>> call, Throwable t) {\n                        Log.i(\"login error: \", String.valueOf(t));\n                    }\n                });\n\n                Call<List<Socket>> call_socket = service.getSocketMapFilter();\n                call_socket.enqueue(new Callback<List<Socket>>() {\n                    @Override\n                    public void onResponse(Call<List<Socket>> call_socket, Response<List<Socket>> response) {\n                        if (response.body() != null) {\n                            Log.i(\"login response: \", String.valueOf(response.body()));\n                            socket_set = response.body();\n                            if (socket_set != null) {\n                                ArrayList make_array = (ArrayList) response.body();\n                                String demo_str = null;\n                                int i;\n                                for (i = 0; i < make_array.size(); i++) {\n                                    socketArray = socket_set.get(i);\n                                    demo_str = socketArray.getSocket();\n                                    socketType.add(demo_str);\n                                }\n                                socketTypeRecycleView.setHasFixedSize(true);\n                                GridLayoutManager manager = new GridLayoutManager(getContext(), 2);\n                                socketTypeRecycleView.setLayoutManager(manager);\n                                socketTypeAdapter = new SocketTypeAdapter(getContext(), socketType);\n                                socketTypeRecycleView.setAdapter(socketTypeAdapter);\n                            }\n                        }\n                        else {\n                        }\n                    }\n\n                    @Override\n                    public void onFailure(Call<List<Socket>> call_socket, Throwable t) {\n                        Log.i(\"login error: \", String.valueOf(t));\n                    }\n                });\n\n                pw.show();\n                reset_b=pw.findViewById(R.id.mapFilterReset);\n                final LinearLayout timeSlotLayout=pw.findViewById(R.id.timeSlotLayout);\n                final LinearLayout availabilityLayout=pw.findViewById(R.id.availabilityLayout);\n                reset_b.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n                        availableDayBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), \"\");\n                        timeSlotBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), \"\");\n                        chargerBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), \"\");\n                        socketDataBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), \"\");\n                        for(int i=0; i<timeSlotLayout.getChildCount();i++){\n                            v = timeSlotLayout.getChildAt(i);\n                            if(v instanceof CheckBox ){\n                                ((CheckBox) v).setChecked(false);\n                            }\n                        }\n                        for (int i=0;i<availabilityLayout.getChildCount();i++)\n                        {\n                            v=availabilityLayout.getChildAt(i);\n                            {\n                                if (v instanceof  CheckBox)\n                                {\n                                    ((CheckBox) v).setChecked(false);\n\n                                }\n                            }\n                        }\n                        editor=preferences.edit();\n                        editor.remove(\"SOCKET_SET\");\n                        editor.remove(\"CHARGER_SET\");\n                        editor.apply();\n                        pw.dismiss();\n                        defaultMarker();\n                    }\n                });\n                apply_p=pw.findViewById(R.id.mapFilterApply);\n                apply_p.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n                        pw.dismiss();\n\n                        Gson gson = new Gson();\n                        String charger_str = preferences.getString(\"CHARGER_SET\", \"null\");\n                        if (charger_str.isEmpty()) { } else {\n                            Type type = new TypeToken<List<String>>() {\n                            }.getType();\n                            selectedCharger = gson.fromJson(charger_str, type);\n                            Log.i(\"Selected charger:\", String.valueOf(selectedCharger));\n                        }\n\n                        String socket_str = preferences.getString(\"SOCKET_SET\", \"null\");\n                        if (socket_str.isEmpty()) { } else {\n                            Type type = new TypeToken<List<String>>() {\n                            }.getType();\n                            selectedSocket = gson.fromJson(socket_str, type);\n                            Log.i(\"Selected charger:\", String.valueOf(selectedSocket));\n                        }\n                        availableDayBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), availabilityDays.toString());\n                        timeSlotBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), timeSlotArray.toString());\n                        Log.i(\"Selected Time:\", String.valueOf(timeSlotArray));\n\n\n                        if (selectedSocket!=null && selectedCharger!=null) {\n                            chargerBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), charger_str);\n                            socketDataBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), socket_str);\n                            Log.i(\"Available Day:\", String.valueOf(availabilityDays));\n                            defaultMarker();\n                        }\n\n                        else if (selectedSocket!=null && selectedCharger==null && selectedCharger.isEmpty())\n                        {\n                            socketDataBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), socket_str);\n                            defaultMarker();\n                        }\n\n                    }\n                });\n\n            }\n        });\n\n        return rootView;\n    }\n\n    private void mainatinStateOfCheckboxes(View v) {\n    }\n\n    private void defaultMarker()\n    {\n        final ProgressDialog mProgressDialog = new ProgressDialog(getContext());\n        mProgressDialog.setIndeterminate(true);\n        mProgressDialog.setMessage(\"Loading...\");\n        mProgressDialog.show();\n        mapFragment.getMapAsync(new OnMapReadyCallback() {\n            @Override\n            public void onMapReady(final GoogleMap mMap) {\n                mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);\n\n                mMap.clear();\n\n                final ArrayList<Double> latArray=new ArrayList<>();\n                final ArrayList<Double> longArray=new ArrayList<>();\n\n                final ArrayList<String> chrgerTypeArray=new ArrayList<>();\n                final ArrayList<String> connectorTypeArray=new ArrayList<>();\n                final ArrayList<String> rateFinalPriceArray=new ArrayList<>();\n                final ArrayList<String> listingId=new ArrayList<>();\n                final ArrayList<String> hostArray=new ArrayList<>();\n\n\n                placeNameBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), mAddressAutoCompleteTextView.getText().toString());\n\n                APIInterface service = SingletonRetrofit.getAPIInterface();\n                Call<List<MarkerData>> call = service.getMarkerData(priceStartBody,priceEndBody,placeNameBody,socketDataBody,timeSlotBody,availableDayBody,chargerBody);\n                call.enqueue(new Callback<List<MarkerData>>() {\n                    @Override\n                    public void onResponse(Call<List<MarkerData>> call, Response<List<MarkerData>> response) {\n                        if (response.body() != null) {\n                            markerData=response.body();\n                            if (markerData!=null) {\n                                ArrayList markerArray = (ArrayList) response.body();\n\n                                for (i = 0; i < markerArray.size(); i++) {\n                                    markerList = markerData.get(i);\n\n                                    Double lat = markerList.getLatitude();\n                                    Double lng = markerList.getLongitude();\n                                    latArray.add(lat);\n                                    longArray.add(lng);\n                                    chrgerTypeArray.add(markerList.getBrand());\n                                    connectorTypeArray.add(markerList.getConnectorType());\n                                    rateFinalPriceArray.add(markerList.getFinalPrice());\n                                    listingId.add(String.valueOf(markerList.getId()));\n                                    list_id=String.valueOf(markerList.getId());\n                                    hostArray.add(markerList.getTable());\n                                }\n                                for (i = 0; i < latArray.size(); i++) {\n                                    if (latArray.get(i)!=null) {\n                                        if (chrgerTypeArray.get(i) != null) {\n                                            chargerString = chrgerTypeArray.get(i);\n                                            connectorTypeString = connectorTypeArray.get(i);\n                                            priceRateString = rateFinalPriceArray.get(i);\n                                            list_id = listingId.get(i);\n                                            Log.i(\"Brand:\", chargerString);\n                                            Log.i(\"Listing Id:\", listingId.get(i));\n\n                                            Log.i(\"Lattitude:\", String.valueOf(latArray.get(i)));\n                                            Log.i(\"Longitude:\", String.valueOf(longArray.get(i)));\n\n                                            LatLng latLngPosition = new LatLng(latArray.get(i), longArray.get(i)); ///\n                                            Log.i(\"Lat Lng:\", String.valueOf(latLngPosition));\n                                            mMap.addMarker(new MarkerOptions().position(latLngPosition).title(list_id).snippet(hostArray.get(i)).icon(bitmapDescriptorFromVector(getContext(),R.drawable.pin_marker)));\n                                            mMap.moveCamera(CameraUpdateFactory.newLatLng(latLngPosition));\n                                            mMap.getUiSettings().setZoomControlsEnabled(true);\n                                            mMap.animateCamera(CameraUpdateFactory.zoomOut(), 10, null);\n\n                                            mMap.setOnInfoWindowClickListener(new GoogleMap.OnInfoWindowClickListener() {\n                                                @Override\n                                                public void onInfoWindowClick(Marker marker) {\n                                                    showAlertDialog(marker.getTitle(),marker.getSnippet());\n                                                }\n                                            });\n\n                                            mMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {\n                                                @Override\n                                                public boolean onMarkerClick(Marker marker) {\n\n                                                    mMap.setInfoWindowAdapter(new GoogleMap.InfoWindowAdapter() {\n                                                        @Override\n                                                        public View getInfoWindow(Marker arg0) {\n                                                            return null;\n                                                        }\n\n                                                        @Override\n                                                        public View getInfoContents(Marker arg0) {\n                                                            Log.i(\"ID:\", String.valueOf(arg0.getTitle()));\n                                                            Log.i(\"HOST:\",arg0.getSnippet());\n                                                            String hostStr=arg0.getSnippet();\n                                                            hostStr=trimSingleQuote(hostStr);\n\n                                                            try {\n                                                                APIInterface service = SingletonRetrofit.getAPIInterface();\n                                                                Call<ShowAvailabilityPojo> call = service.getAvailability(arg0.getTitle(),hostStr);\n                                                                Log.i(\"Connector_api  : \", String.valueOf(call.request().url()));\n                                                                call.enqueue(new Callback<ShowAvailabilityPojo>() {\n                                                                    @Override\n                                                                    public void onResponse(Call<ShowAvailabilityPojo> call, Response<ShowAvailabilityPojo> response) {\n                                                                        if (response.body() != null) {\n                                                                            ShowAvailabilityPojo avaiPojo=response.body();\n                                                                            if (avaiPojo!=null)\n                                                                            {\n                                                                                ShowAvailabilityProvider providerObject=avaiPojo.getProvider();\n                                                                                if (providerObject!=null)\n                                                                                {\n                                                                                    mapMarkerView = getLayoutInflater().inflate(R.layout.text_auto, null);\n\n                                                                                    connetorText =(TextView) mapMarkerView.findViewById(R.id.type_type);\n                                                                                    priceText = mapMarkerView.findViewById(R.id.rate_type);\n                                                                                    chargerTypeText = mapMarkerView.findViewById(R.id.charger_type);\n                                                                                    chargerTypeText.bringToFront();\n\n                                                                                    if (providerObject.getPowerOutput()!=null) {\n                                                                                        connetorText.setText(providerObject.getPowerOutput());\n                                                                                    }\n                                                                                    else {\n                                                                                        connetorText.setText(\"null\");\n                                                                                    }\n                                                                                    priceText.setText(providerObject.getFinalPrice());\n                                                                                    if (providerObject.getChargerBrand()!=null)\n                                                                                    {\n                                                                                        StringWriter sw = new StringWriter();\n                                                                                        sw.append(\"Charger Brand:\");\n                                                                                        sw.append(providerObject.getChargerBrand());\n                                                                                        chargerTypeText.setText(sw.toString());\n                                                                                    }\n                                                                                    else\n                                                                                    {\n                                                                                        StringWriter sw = new StringWriter();\n                                                                                        sw.append(\"Socket:\");\n                                                                                        sw.append(providerObject.getChargerBrand());\n                                                                                        chargerTypeText.setText(sw.toString());\n                                                                                    }\n                                                                                    Log.i(\"Data:\",(connetorText.getText().toString()));\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n\n                                                                    @Override\n                                                                    public void onFailure(Call<ShowAvailabilityPojo> call, Throwable t) {\n\n                                                                    }\n                                                                });\n\n\n                                                            } catch (Exception ev) {\n                                                                System.out.print(ev.getMessage());\n                                                            }\n                                                            return mapMarkerView;\n                                                        }\n                                                    });\n                                                    return false;\n                                                }\n                                            });\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                Toast.makeText(getContext(), \"No Listing available.\", Toast.LENGTH_SHORT).show();\n                            }\n                        }\n                        mProgressDialog.dismiss();\n                    }\n\n                    @Override\n                    public void onFailure(Call<List<MarkerData>> call, Throwable t) {\n                        Log.i(\"Map error: \", String.valueOf(t));\n                        Toast.makeText(getContext(), \"Please check network.\", Toast.LENGTH_SHORT).show();\n                    }\n                });\n\n            }\n        });\n    }\n\n\n    public View getInfoContents(Marker marker) {\n        View view = getLayoutInflater().inflate(R.layout.text_auto, null);\n\n        TextView titleTextView = (TextView) view.findViewById(R.id.type_type);\n        TextView snippetTextView = (TextView) view.findViewById(R.id.rate_type);\n\n        titleTextView.setText(marker.getTitle());\n        snippetTextView.setText(marker.getSnippet());\n\n        return view;\n    }\n\n    private void initialMarkers()\n    {\n        final ProgressDialog mProgressDialog = new ProgressDialog(getContext());\n        mProgressDialog.setIndeterminate(true);\n        mProgressDialog.setMessage(\"Loading...\");\n        mProgressDialog.show();\n        mapFragment.getMapAsync(new OnMapReadyCallback() {\n            @Override\n            public void onMapReady(final GoogleMap mMap) {\n                mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);\n\n                mMap.clear();\n\n                final ArrayList<Double> latArray=new ArrayList<>();\n                final ArrayList<Double> longArray=new ArrayList<>();\n\n                final ArrayList<String> chrgerTypeArray=new ArrayList<>();\n                final ArrayList<String> connectorTypeArray=new ArrayList<>();\n                final ArrayList<String> rateFinalPriceArray=new ArrayList<>();\n                final ArrayList<String> listingId=new ArrayList<>();\n                final ArrayList<String> hostArray=new ArrayList<>();\n\n                placeNameBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), mAddressAutoCompleteTextView.getText().toString());\n\n                APIInterface service = SingletonRetrofit.getAPIInterface();\n                Call<List<MarkerData>> call = service.getMarkerData(priceStartBody,priceEndBody,placeNameBody,socketDataBody,timeSlotBody,availableDayBody,chargerBody);\n                call.enqueue(new Callback<List<MarkerData>>() {\n                    @Override\n                    public void onResponse(Call<List<MarkerData>> call, Response<List<MarkerData>> response) {\n                        if (response.body() != null) {\n                            markerData=response.body();\n                            if (markerData!=null) {\n                                ArrayList markerArray = (ArrayList) response.body();\n\n                                for (i = 0; i < markerArray.size(); i++) {\n                                    markerList = markerData.get(i);\n                                    Double lat = markerList.getLatitude();\n                                    Double lng = markerList.getLongitude();\n                                    latArray.add(lat);\n                                    longArray.add(lng);\n                                    chrgerTypeArray.add(markerList.getBrand());\n                                    connectorTypeArray.add(markerList.getConnectorType());\n                                    rateFinalPriceArray.add(markerList.getFinalPrice());\n                                    listingId.add(String.valueOf(markerList.getId()));\n                                    hostArray.add(markerList.getTable());\n                                }\n                                for (i = 0; i < latArray.size(); i++) {\n                                    chargerString = chrgerTypeArray.get(i);\n                                    connectorTypeString=connectorTypeArray.get(i);\n                                    priceRateString=rateFinalPriceArray.get(i);\n                                    list_id=listingId.get(i);\n                                    Log.i(\"Brand:\",chargerString);\n                                    Log.i(\"Listing Id:\",listingId.get(i));\n                                        Log.i(\"Lattitude:\", String.valueOf(latArray.get(i)));\n                                        Log.i(\"Longitude:\", String.valueOf(longArray.get(i)));\n\n\n                                        LatLng latLngPosition = new LatLng(latArray.get(i), longArray.get(i)); ///\n                                        Log.i(\"Lat Lng:\", String.valueOf(latLngPosition));\n//                                    mMap.addMarker(new MarkerOptions().position(latLngPosition));\n                                        mMap.addMarker(new MarkerOptions().position(latLngPosition).title(list_id).snippet(hostArray.get(i)).icon(bitmapDescriptorFromVector(getContext(),R.drawable.pin_marker)));\n                                        mMap.moveCamera(CameraUpdateFactory.newLatLng(latLngPosition));\n                                        mMap.getUiSettings().setZoomControlsEnabled(true);\n                                        mMap.animateCamera(CameraUpdateFactory.zoomOut(), 10, null);\n\n                                        mMap.setOnInfoWindowClickListener(new GoogleMap.OnInfoWindowClickListener() {\n                                            @Override\n                                            public void onInfoWindowClick(Marker marker) {\n                                                showAlertDialog(marker.getTitle(),marker.getSnippet());\n                                            }\n                                        });\n\n                                        mMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {\n                                            @Override\n                                            public boolean onMarkerClick(final Marker marker) {\n\n                                                mMap.setInfoWindowAdapter(new GoogleMap.InfoWindowAdapter() {\n                                                    @Override\n                                                    public View getInfoWindow(Marker arg0) {\n                                                        return null;\n                                                    }\n\n                                                    @Override\n                                                    public View getInfoContents(Marker arg0) {\n                                                        Log.i(\"ID:\", String.valueOf(arg0.getTitle()));\n                                                        Log.i(\"HOST:\",arg0.getSnippet());\n                                                        String hostStr=arg0.getSnippet();\n                                                        hostStr=trimSingleQuote(hostStr);\n                                                        try {\n                                                            APIInterface service = SingletonRetrofit.getAPIInterface();\n                                                            Call<ShowAvailabilityPojo> call = service.getAvailability(arg0.getTitle(),hostStr);\n                                                            Log.i(\"Connector_api  : \", String.valueOf(call.request().url()));\n                                                            call.enqueue(new Callback<ShowAvailabilityPojo>() {\n                                                                @Override\n                                                                public void onResponse(Call<ShowAvailabilityPojo> call, Response<ShowAvailabilityPojo> response) {\n                                                                    if (response.body() != null) {\n                                                                        ShowAvailabilityPojo avaiPojo=response.body();\n                                                                        if (avaiPojo!=null)\n                                                                        {\n                                                                            ShowAvailabilityProvider providerObject=avaiPojo.getProvider();\n                                                                            if (providerObject!=null)\n                                                                            {\n                                                                                mapMarkerView = getLayoutInflater().inflate(R.layout.text_auto, null);\n\n                                                                                connetorText =(TextView) mapMarkerView.findViewById(R.id.type_type);\n                                                                                priceText = mapMarkerView.findViewById(R.id.rate_type);\n                                                                                chargerTypeText = mapMarkerView.findViewById(R.id.charger_type);\n                                                                                chargerTypeText.bringToFront();\n                                                                                connetorText.setText(marker.getTitle());\n\n                                                                                if (providerObject.getConnectorType()!=null) {\n                                                                                    connetorText.setText(providerObject.getConnectorType());\n                                                                                }\n                                                                                else {\n                                                                                    connetorText.setText(\"null\");\n                                                                                }\n                                                                                priceText.setText(providerObject.getFinalPrice());\n                                                                                if (providerObject.getChargerBrand()!=null)\n                                                                                {\n\n                                                                                    StringWriter sw = new StringWriter();\n                                                                                    sw.append(\"Charger Brand:\");\n                                                                                    sw.append(providerObject.getChargerBrand());\n                                                                                    chargerTypeText.setText(sw.toString());\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    StringWriter sw = new StringWriter();\n                                                                                    sw.append(\"Socket:\");\n                                                                                    sw.append(providerObject.getChargerBrand());\n                                                                                    chargerTypeText.setText(sw.toString());\n                                                                                }\n                                                                                Log.i(\"Data:\",(connetorText.getText().toString()));\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n\n                                                                @Override\n                                                                public void onFailure(Call<ShowAvailabilityPojo> call, Throwable t) {\n\n                                                                }\n                                                            });\n\n\n                                                        } catch (Exception ev) {\n                                                            System.out.print(ev.getMessage());\n                                                        }\n                                                        return mapMarkerView;\n                                                    }\n                                                });\n                                                return false;\n                                            }\n                                        });\n\n                                }\n                            }\n                            else {\n                                Toast.makeText(getContext(), \"No Listing available.\", Toast.LENGTH_SHORT).show();\n                            }\n                        }\n\n                        mProgressDialog.dismiss();\n                    }\n\n                    @Override\n                    public void onFailure(Call<List<MarkerData>> call, Throwable t) {\n                        Log.i(\"Map error: \", String.valueOf(t));\n                        Toast.makeText(getContext(), \"Please check network.\", Toast.LENGTH_SHORT).show();\n                    }\n                });\n\n            }\n        });\n    }\n    private void showAlertDialog(String hostId,String  hostTable)\n    {\n\n        String hostStr=hostTable;\n        hostStr=trimSingleQuote(hostStr);\n        String title_str=hostStr +\" \"+\"charger\";\n        Log.i(\"Table name:\",title_str);\n        viewDetailDialog=new Dialog(getContext(),R.style.DialogAlignment);\n        viewDetailDialog.setContentView(R.layout.pricing_reservation_pop_up);\n        recyclerView=viewDetailDialog.findViewById(R.id.availabilityTimeSlotRecycleView);\n\n        TextView pop_up_title=viewDetailDialog.findViewById(R.id.mapMarkerTitle);\n        if (hostStr.equals(\"publics\"))\n        {\n            pop_up_title.setText(\"Public Charger\");\n        }\n        else   if (hostStr.equals(\"residentials\"))\n        {\n            pop_up_title.setText(\"Residential Charger\");\n        }\n        else   if (hostStr.equals(\"commercials\"))\n        {\n            pop_up_title.setText(\"Commercial Charger\");\n        }\n\n        final TextView socket_type=viewDetailDialog.findViewById(R.id.mapMarkerPopUpSocket);\n        final TextView charger_type=viewDetailDialog.findViewById(R.id.mapMarkerPopUpCharger);\n        final TextView power_output=viewDetailDialog.findViewById(R.id.mapMarkerPopUpPower);\n        final TextView model_type=viewDetailDialog.findViewById(R.id.mapMarkerPopUpModel);\n        final TextView connector_type=viewDetailDialog.findViewById(R.id.mapMarkerPopUpConnctor);\n        final TextView rate_text=viewDetailDialog.findViewById(R.id.mapMarkerPopUpRate);\n        final TextView availableDay=viewDetailDialog.findViewById(R.id.mapMarkerPopUpAvailableDay);\n        final LinearLayout socketLayout=viewDetailDialog.findViewById(R.id.socketTypeLayout);\n        final LinearLayout chargerLayout=viewDetailDialog.findViewById(R.id.chargerTypeLayout);\n        Button pricingAndReservationButton=viewDetailDialog.findViewById(R.id.mapMarkerPopUpPricingButton);\n\n        final ProgressDialog mProgressDialog = new ProgressDialog(getContext());\n        mProgressDialog.setIndeterminate(true);\n        mProgressDialog.setMessage(\"Loading...\");\n        mProgressDialog.show();\n        day_array.clear();\n        time_array.clear();\n\n        APIInterface service = SingletonRetrofit.getAPIInterface();\n        Call<ShowAvailabilityPojo> call = service.getAvailability(hostId,hostStr);\n        Log.i(\"Connector_api  : \", String.valueOf(call.request().url()));\n        call.enqueue(new Callback<ShowAvailabilityPojo>() {\n                         @Override\n                         public void onResponse(Call<ShowAvailabilityPojo> call, Response<ShowAvailabilityPojo> response) {\n                             if (response.body() != null) {\n                                 ShowAvailabilityPojo availabilityPojo = response.body();\n                                 if (availabilityPojo!=null) {\n                                     Log.i(\"days:\",availabilityPojo.getProvider().getDays());\n                                     availableDay.setText(availabilityPojo.getProvider().getDays());\n                                     power_output.setText(availabilityPojo.getProvider().getPowerOutput());\n                                     rate_text.setText(availabilityPojo.getProvider().getFinalPrice());\n\n\n                                     if (availabilityPojo.getProvider().getChargerBrand()!=null) {\n                                         if (availabilityPojo.getProvider().getSocket()!=null) {\n                                             socket_type.setText(availabilityPojo.getProvider().getSocket());\n                                             power_output.setText(availabilityPojo.getProvider().getPowerOutput());\n                                             chargerLayout.setVisibility(View.GONE);\n                                             socketLayout.setVisibility(View.VISIBLE);\n                                             mProgressDialog.dismiss();\n                                         }\n                                         else\n                                         {\n                                             socket_type.setText(\"null\");\n                                         }\n                                     }\n                                     else\n                                     {\n                                      socketLayout.setVisibility(View.GONE);\n                                      chargerLayout.setVisibility(View.VISIBLE);\n                                      if (availabilityPojo.getProvider().getChargerBrand()!=null) {\n                                          charger_type.setText(availabilityPojo.getProvider().getChargerBrand());\n                                          model_type.setText(availabilityPojo.getProvider().getChargerModel());\n                                          connector_type.setText(availabilityPojo.getProvider().getConnectorType());\n                                          mProgressDialog.dismiss();\n                                      }\n                                      else\n                                      {\n                                          charger_type.setText(\"null\");\n                                      }\n                                     }\n\n                                     String selected_days=availabilityPojo.getProvider().getDays();\n                                     String single_day_string=availabilityPojo.getSingleDay();\n                                     Log.i(\"Connector_api\",single_day_string);\n\n                                     if (single_day_string.equals(\"0\"))\n                                     {\n                                         StringBuilder stringBuilder = new StringBuilder(\"\");\n                                         int listSize = availabilityPojo.getStartTime().size();\n                                         for (int itemIndex = 0; itemIndex < availabilityPojo.getStartTime().size(); itemIndex++) {\n                                             String startTime = availabilityPojo.getStartTime().get(itemIndex);\n                                             String endTime = availabilityPojo.getEndTime().get(itemIndex);\n                                             stringBuilder.append(startTime + \"-\" + endTime);\n                                             if (itemIndex < listSize - 1) {\n                                                 stringBuilder.append(\", \");\n                                             }\n                                         }\n                                         if (selected_days.contains(\"monday\")) {\n                                             time_array.add(stringBuilder.toString());\n                                             day_array.add(\"Monday\");\n                                         }\n                                         if (selected_days.contains(\"tuesday\")) {\n                                             time_array.add(stringBuilder.toString());\n                                             day_array.add(\"Tuesday\");\n                                         }\n                                         if (selected_days.contains(\"wednesday\")) {\n                                             time_array.add(stringBuilder.toString());\n                                             day_array.add(\"Wednesday\");\n                                         }\n                                         if (selected_days.contains(\"thursday\")) {\n                                             time_array.add(stringBuilder.toString());\n                                             day_array.add(\"Thursday\");\n                                         }\n                                         if (selected_days.contains(\"friday\")) {\n                                             time_array.add(stringBuilder.toString());\n                                             day_array.add(\"Friday\");\n                                         }\n                                         if (selected_days.contains(\"saturday\")) {\n                                             time_array.add(stringBuilder.toString());\n                                             day_array.add(\"Satursday\");\n                                         }\n                                         if (selected_days.contains(\"sunday\")) {\n                                             time_array.add(stringBuilder.toString());\n                                             day_array.add(\"Sunday\");\n                                         }\n                                     }\n                                     else\n                                     {\n                                         if (selected_days.contains(\"monday\")) {\n                                             String selectedTimeValue = getSelectedTimeForDay(availabilityPojo.getStartTimeMon(), availabilityPojo.getEndTimeMon());\n                                             time_array.add(selectedTimeValue);\n                                             day_array.add(\"Monday\");\n                                         }\n                                         if (selected_days.contains(\"tuesday\")) {\n                                             String selectedTimeValue = getSelectedTimeForDay(availabilityPojo.getStartTimeTues(), availabilityPojo.getEndTimeTues());\n                                             time_array.add(selectedTimeValue);\n                                             day_array.add(\"Tuesday\");\n                                         }\n                                         if (selected_days.contains(\"wednesday\")) {\n                                             String selectedTimeValue = getSelectedTimeForDay(availabilityPojo.getStartTimeWed(), availabilityPojo.getEndTimeWed());\n                                             time_array.add(selectedTimeValue);\n                                             day_array.add(\"Wednesday\");\n                                         }\n                                         if (selected_days.contains(\"thursday\")) {\n                                             String selectedTimeValue = getSelectedTimeForDay(availabilityPojo.getStartTimeThus(), availabilityPojo.getEndTimeThus());\n                                             time_array.add(selectedTimeValue);\n                                             day_array.add(\"Thursday\");\n                                         }\n                                         if (selected_days.contains(\"friday\")) {\n                                             String selectedTimeValue = getSelectedTimeForDay(availabilityPojo.getStartTimeFri(), availabilityPojo.getEndTimeFri());\n                                             time_array.add(selectedTimeValue);\n                                             day_array.add(\"friday\");\n\n                                         }\n                                         if (selected_days.contains(\"saturday\")) {\n                                             String selectedTimeValue = getSelectedTimeForDay(availabilityPojo.getStartTimeSat(), availabilityPojo.getEndTimeSat());\n                                             time_array.add(selectedTimeValue);\n                                             day_array.add(\"saturday\");\n\n                                         }\n                                         if (selected_days.contains(\"sunday\")) {\n                                             String selectedTimeValue = getSelectedTimeForDay(availabilityPojo.getStartTimeSun(), availabilityPojo.getEndTimeSun());\n                                             time_array.add(selectedTimeValue);\n                                             day_array.add(\"Sunday\");\n\n                                         }\n                                     }\n                                     Log.i(\"Provider\", availabilityPojo.getProvider().getDays());\n                                 }\n                                 if (day_array.size()==0) {\n                                     Toast.makeText(getContext(), \"No Availability of host.\", Toast.LENGTH_SHORT).show();\n                                 }\n                                 else\n                                 {\n                                     recyclerView.setHasFixedSize(true);\n                                     layoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false);\n                                     recyclerView.setLayoutManager(layoutManager);\n                                     adapter = new AvailabilityTimeSlotAdapter(getContext(), day_array, time_array);\n                                     recyclerView.setAdapter(adapter);\n                                 }\n\n                             }\n                             else {\n\n                             }\n                         }\n            @Override\n            public void onFailure(Call<ShowAvailabilityPojo> call, Throwable t) {\n                Log.i(\"Error\", String.valueOf(t.getMessage()));\n                Toast.makeText(getContext(), \"Internal server error.\", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n        viewDetailDialog.show();\n    }\n\n\n    private BitmapDescriptor bitmapDescriptorFromVector(Context context, int vectorResId) {\n        Drawable vectorDrawable = ContextCompat.getDrawable(context, vectorResId);\n        vectorDrawable.setBounds(0, 0, vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight());\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\n        Canvas canvas = new Canvas(bitmap);\n        vectorDrawable.draw(canvas);\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\n    }\n\n\n    private void showAvailbilityPopUp() {\n        AlertDialog.Builder builder1 = new AlertDialog.Builder(getContext());\n        builder1.setMessage(\"Commercial Details \\n\\n Availability\");\n        builder1.setCancelable(true);\n        builder1.setPositiveButton(\"close\", new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialog, int id) {\n                dialog.cancel();\n            }\n        });\n        AlertDialog alertDialog = builder1.create();\n        alertDialog.show();\n    }\n\n    @Override\n    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n        String place_name = mGooglePlacesAutocompleteAdapter.getItem(position);\n        place_name=trimDoubbleQuote(place_name);\n        Log.i(\"Place is:\",place_name);\n        mAddressAutoCompleteTextView.setText(place_name);\n        placeNameBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), mAddressAutoCompleteTextView.getText().toString());\n        defaultMarker();\n\n    }\n    public static String trimDoubbleQuote(String value){\n        return value.replaceAll(\"^\\\"|\\\"$\", \"\");\n    }\n    public static String trimSingleQuote(String value){\n        return value.replaceAll(\"^\\'|\\'$\", \"\");\n    }\n\n    @Override\n    public void onMapReady(GoogleMap googleMap) {\n\n    }\n\n    public class mSingleCheckBoxChangeListener implements CheckBox.OnCheckedChangeListener {\n        @Override\n        public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n            int backgroundColorGrey = ContextCompat.getColor(getContext(), R.color.quantum_grey);\n            int backgroundColorGreen = ContextCompat.getColor(getContext(), R.color.green);\n            boolean checkBoxValue;\n            editor=preferences.edit();\n            if (buttonView == monday) {\n                if (isChecked) {\n                    availabilityDays.add(\"monday\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"monday\", checkBoxValue);\n                    editor.apply();\n                } else {\n                    availabilityDays.remove(\"monday\");\n                     checkBoxValue =false;\n                    editor.putBoolean(\"monday\", checkBoxValue);\n                    editor.commit();\n\n                }\n            }\n\n            if (buttonView == tuesday) {\n                if (isChecked) {\n                    availabilityDays.add(\"tuesday\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"tuesday\", checkBoxValue);\n                    editor.apply();\n                } else {\n                    availabilityDays.remove(\"tuesday\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"tuesday\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n\n            if (buttonView == wednesday) {\n                if (isChecked) {\n                    availabilityDays.add(\"wednesday\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"wednesday\", checkBoxValue);\n                    editor.apply();\n                } else {\n                    availabilityDays.remove(\"wednesday\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"wednesday\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n\n            if (buttonView == thursday) {\n                if (isChecked) {\n                    availabilityDays.add(\"thursday\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"thursday\", checkBoxValue);\n                    editor.apply();\n                } else {\n                    availabilityDays.remove(\"thursday\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"thursday\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n\n            if (buttonView == friday) {\n                if (isChecked) {\n                    availabilityDays.add(\"friday\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"friday\", checkBoxValue);\n                    editor.apply();\n                } else {\n                    availabilityDays.remove(\"friday\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"friday\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n\n            if (buttonView == satursday) {\n                if (isChecked) {\n                    availabilityDays.add(\"saturday\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"satursday\", checkBoxValue);\n                    editor.apply();\n                } else {\n                    availabilityDays.remove(\"saturday\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"saturday\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n\n            if (buttonView == sunday) {\n                if (isChecked) {\n                    availabilityDays.add(\"sunday\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"sunday\", checkBoxValue);\n                    editor.apply();\n                } else {\n                    availabilityDays.remove(\"sunday\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"sunday\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n            if (buttonView==morningTime)\n            {\n                if (isChecked){\n                    timeSlotArray.add(\"8:00-11:00\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"morning\", checkBoxValue);\n                    editor.apply();\n                }\n                else {\n                    timeSlotArray.remove(\"8:00-11:00\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"morning\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n            if (buttonView==middayTime)\n            {\n                if (isChecked){\n                    timeSlotArray.add(\"11:00-15:00\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"midday\", checkBoxValue);\n                    editor.apply();\n                }\n                else {\n                    timeSlotArray.remove(\"11:00-15:00\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"midday\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n            if (buttonView==afternoonTime)\n            {\n                if (isChecked){\n                    timeSlotArray.add(\"15:00-18:00\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"afternoon\", checkBoxValue);\n                    editor.apply();\n                }\n                else {\n                    timeSlotArray.remove(\"15:00-18:00\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"afternoon\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n            if (buttonView==eveningTime)\n            {\n                if (isChecked){\n                    timeSlotArray.add(\"18:00-21:00\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"evening\", checkBoxValue);\n                    editor.apply();\n                }\n                else {\n                    timeSlotArray.remove(\"18:00-21:00\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"evening\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n            if (buttonView==nightTime)\n            {\n                if (isChecked){\n                    timeSlotArray.add(\"21:00-8:00\");\n                    checkBoxValue=true;\n                    editor.putBoolean(\"overnight\", checkBoxValue);\n                    editor.apply();\n                }\n                else {\n                    timeSlotArray.remove(\"21:00=8:00\");\n                    checkBoxValue=false;\n                    editor.putBoolean(\"overnight\", checkBoxValue);\n                    editor.apply();\n                }\n            }\n        }\n    }\n    public String getSelectedTimeForDay(List<String> startTimeList, List<String> endTimeList) {\n        StringBuilder stringBuilder = new StringBuilder(\"\");\n        int listSize = startTimeList.size();\n        for (int itemIndex = 0; itemIndex < listSize; itemIndex++) {\n            String startTime = startTimeList.get(itemIndex);\n            String endTime = endTimeList.get(itemIndex);\n            stringBuilder.append(startTime + \"-\" + endTime);\n            if (itemIndex < listSize - 1) {\n                stringBuilder.append(\", \");\n            }\n        }\n        return stringBuilder.toString();\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/elshare/map_frag.java	(revision 68d9d9a9018671e28448b6dd941bdaf37cf916af)
+++ app/src/main/java/com/example/elshare/map_frag.java	(date 1608366283185)
@@ -11,6 +11,8 @@
 import android.graphics.Color;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
+import android.location.Address;
+import android.location.Geocoder;
 import android.os.Build;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
@@ -28,6 +30,7 @@
 import android.widget.ImageButton;
 import android.widget.LinearLayout;
 import android.widget.ListView;
+import android.widget.SearchView;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -61,6 +64,7 @@
 import com.mohammedalaa.seekbar.OnDoubleValueSeekBarChangeListener;
 import com.yahoo.mobile.client.android.util.rangeseekbar.RangeSeekBar;
 
+import java.io.IOException;
 import java.io.StringWriter;
 import java.lang.reflect.Type;
 import java.util.ArrayList;
@@ -159,23 +163,46 @@
      String priceRateString;
      String list_id;
      SharedPreferences preferences;
+     SearchView searchView;
+
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
         final View rootView = inflater.inflate(R.layout.map_frag, container, false);
         preferences = PreferenceManager.getDefaultSharedPreferences(getContext());
+        editor = preferences.edit();
 
         mapFilter = rootView.findViewById(R.id.imageButton35);
+        searchView=rootView.findViewById(R.id.location2);
+
         myDialog = new Dialog(getContext());
         mAddressAutoCompleteTextView=rootView.findViewById(R.id.autoCompleteTextViewMap);
         mGooglePlacesAutocompleteAdapter = new GooglePlacesAutocompleteAdapter(getContext(), R.layout.support_simple_spinner_dropdown_item);
         mAddressAutoCompleteTextView.setAdapter(mGooglePlacesAutocompleteAdapter);
+
         mAddressAutoCompleteTextView.setOnItemClickListener(this);
          seekBar = new RangeSeekBar<Integer>(getContext());
 
         mapFragment= (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map);
         initialMarkers();
 
+        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
+            @Override
+            public boolean onQueryTextSubmit(String query) {
+
+                String location = searchView.getQuery().toString();
+                initialMarkers();
+                Log.i("Search:",location);
+                return false;
+
+            }
+
+            @Override
+            public boolean onQueryTextChange(String newText) {
+                return false;
+            }
+        });
+
         mapFilter.setOnClickListener(new View.OnClickListener() {
             @RequiresApi(api = Build.VERSION_CODES.KITKAT)
             @Override
@@ -385,7 +412,6 @@
                                 }
                             }
                         }
-                        editor=preferences.edit();
                         editor.remove("SOCKET_SET");
                         editor.remove("CHARGER_SET");
                         editor.apply();
@@ -659,7 +685,7 @@
                 final ArrayList<String> listingId=new ArrayList<>();
                 final ArrayList<String> hostArray=new ArrayList<>();
 
-                placeNameBody = RequestBody.create(MediaType.parse("multipart/form-data"), mAddressAutoCompleteTextView.getText().toString());
+                placeNameBody = RequestBody.create(MediaType.parse("multipart/form-data"), searchView.getQuery().toString());
 
                 APIInterface service = SingletonRetrofit.getAPIInterface();
                 Call<List<MarkerData>> call = service.getMarkerData(priceStartBody,priceEndBody,placeNameBody,socketDataBody,timeSlotBody,availableDayBody,chargerBody);
@@ -855,6 +881,7 @@
         day_array.clear();
         time_array.clear();
 
+
         APIInterface service = SingletonRetrofit.getAPIInterface();
         Call<ShowAvailabilityPojo> call = service.getAvailability(hostId,hostStr);
         Log.i("Connector_api  : ", String.valueOf(call.request().url()));
@@ -868,7 +895,13 @@
                                      availableDay.setText(availabilityPojo.getProvider().getDays());
                                      power_output.setText(availabilityPojo.getProvider().getPowerOutput());
                                      rate_text.setText(availabilityPojo.getProvider().getFinalPrice());
+                                     editor.putString("HOST_ID_BOOKING", String.valueOf(availabilityPojo.getProvider().getId()));
+                                     editor.putString("USER_ID_BOOKING", String.valueOf(availabilityPojo.getData().getUserId()));
+                                     editor.putString("POWER_OUTPUT_BOOKING", String.valueOf(availabilityPojo.getProvider().getPowerOutput()));
+                                     editor.putString("PRICE_BOOKING", String.valueOf(availabilityPojo.getProvider().getFinalPrice()));
+                                     editor.apply();
 
+                                     Log.i("Host id",String.valueOf(availabilityPojo.getProvider().getId()));
 
                                      if (availabilityPojo.getProvider().getChargerBrand()!=null) {
                                          if (availabilityPojo.getProvider().getSocket()!=null) {
@@ -987,6 +1020,7 @@
                                      }
                                      Log.i("Provider", availabilityPojo.getProvider().getDays());
                                  }
+
                                  if (day_array.size()==0) {
                                      Toast.makeText(getContext(), "No Availability of host.", Toast.LENGTH_SHORT).show();
                                  }
@@ -1007,7 +1041,7 @@
             @Override
             public void onFailure(Call<ShowAvailabilityPojo> call, Throwable t) {
                 Log.i("Error", String.valueOf(t.getMessage()));
-                Toast.makeText(getContext(), "Internal server error.", Toast.LENGTH_SHORT).show();
+                Toast.makeText(getContext(), String.valueOf(t.getMessage()), Toast.LENGTH_SHORT).show();
             }
         });
 
@@ -1066,7 +1100,6 @@
             int backgroundColorGrey = ContextCompat.getColor(getContext(), R.color.quantum_grey);
             int backgroundColorGreen = ContextCompat.getColor(getContext(), R.color.green);
             boolean checkBoxValue;
-            editor=preferences.edit();
             if (buttonView == monday) {
                 if (isChecked) {
                     availabilityDays.add("monday");
Index: app/src/main/res/layout/account_evdriver_frag.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:id=\"@+id/driver_f\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".account_evdriver_frag\"\n    tools:ignore=\"MissingDefaultResource\">\n\n\n    <ScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@color/white\">\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:backgroundTint=\"#171616\"\n            android:orientation=\"vertical\">\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"50dp\"\n                android:orientation=\"horizontal\">\n\n                <Spinner\n                    android:id=\"@+id/spinner15\"\n                    style=\"@android:style/Widget.Holo.Light.Spinner\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"50dp\"\n                    android:layout_gravity=\"center\"\n                    android:layout_marginHorizontal=\"15dp\"\n                    android:gravity=\"center\"\n                    android:textSize=\"@dimen/size_text\" />\n            </LinearLayout>\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"50dp\"\n                android:orientation=\"horizontal\"\n                android:layout_marginHorizontal=\"15dp\">\n                <EditText\n                    android:id=\"@+id/addVihicleYear\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:layout_weight=\"70\"\n                    android:backgroundTint=\"@color/black\"\n                    android:cursorVisible=\"true\"\n                    android:gravity=\"center|left\"\n                    android:hint=\"@string/addVihicleYear\"\n                    android:inputType=\"number\"\n                    android:textColor=\"@color/green\"\n                    android:textColorHighlight=\"@color/green\"\n                    android:textSize=\"@dimen/size_text\" />\n            </LinearLayout>\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"50dp\"\n                android:orientation=\"horizontal\"\n                android:layout_marginHorizontal=\"15dp\">\n                <Spinner\n                    android:id=\"@+id/Make_Spinner\"\n                    style=\"@android:style/Widget.Holo.Light.Spinner\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:layout_gravity=\"center\"\n                    android:layout_marginHorizontal=\"2dp\"\n                    android:layout_weight=\"50\"\n                    android:gravity=\"center\"\n                    android:textSize=\"@dimen/size_text\" />\n                <Spinner\n                    android:id=\"@+id/Model_spinner\"\n                    style=\"@android:style/Widget.Holo.Light.Spinner\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"50dp\"\n                    android:layout_gravity=\"center\"\n                    android:layout_marginRight=\"10dp\"\n                    android:layout_weight=\"50\"\n                    android:gravity=\"center\"\n                    android:visibility=\"gone\"\n                    android:layout_marginLeft=\"10dp\"\n                    android:textSize=\"@dimen/size_text\" />\n\n            </LinearLayout>\n            <EditText\n                android:id=\"@+id/addDerivceRegistrationNumber\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"50dp\"\n                android:layout_weight=\"70\"\n                android:backgroundTint=\"@color/black\"\n                android:cursorVisible=\"true\"\n                android:gravity=\"center|left\"\n                android:hint=\"@string/addVehicleRegistrationNo\"\n                android:inputType=\"textPersonName\"\n                android:layout_marginHorizontal=\"20dp\"\n                android:textColor=\"@color/green\"\n                android:textColorHighlight=\"@color/green\"\n                android:textSize=\"@dimen/size_text\" />\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"50dp\"\n                android:layout_marginHorizontal=\"20dp\"\n                android:orientation=\"horizontal\">\n\n                <TextView\n                    android:id=\"@+id/addVihicleBatterySize\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:layout_weight=\"70\"\n                    android:background=\"?attr/editTextBackground\"\n                    android:backgroundTint=\"@color/black\"\n                    android:cursorVisible=\"true\"\n                    android:gravity=\"center|left\"\n                    android:hint=\"@string/addVihicleBatterySize\"\n                    android:inputType=\"textPersonName\"\n                    android:textColor=\"@color/green\"\n                    android:textColorHighlight=\"@color/green\"\n                    android:textSize=\"@dimen/size_text\" />\n\n\n            </LinearLayout>\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"50dp\"\n                android:orientation=\"horizontal\"\n                android:layout_marginHorizontal=\"20dp\">\n\n                <EditText\n                    android:id=\"@+id/addDeriverOnBoardSize\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"50dp\"\n                    android:layout_weight=\"1\"\n                    android:backgroundTint=\"@color/black\"\n                    android:cursorVisible=\"true\"\n                    android:gravity=\"center|left\"\n                    android:hint=\"@string/addDriverOnBoardSize\"\n                    android:inputType=\"numberSigned\"\n                    android:textColor=\"@color/green\"\n                    android:textColorHighlight=\"@color/green\"\n                    android:textSize=\"@dimen/size_text\" />\n            </LinearLayout>\n            <TableRow\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"30dp\"/>\n            <Button\n                android:id=\"@+id/addDriver\"\n                android:layout_width=\"140dp\"\n                android:layout_height=\"35dp\"\n                android:layout_gravity=\"center\"\n                android:layout_marginHorizontal=\"15dp\"\n                android:background=\"@drawable/roundedbutton\"\n                android:hint=\"@string/editDriver\"\n                android:textSize=\"@dimen/size_B\"\n                android:textStyle=\"bold\"\n                tools:visibility=\"visible\" />\n        </LinearLayout>\n    </ScrollView>\n</FrameLayout>\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/account_evdriver_frag.xml	(revision 68d9d9a9018671e28448b6dd941bdaf37cf916af)
+++ app/src/main/res/layout/account_evdriver_frag.xml	(date 1608367122912)
@@ -138,6 +138,7 @@
                     android:gravity="center|left"
                     android:hint="@string/addDriverOnBoardSize"
                     android:inputType="numberSigned"
+                    android:maxLength="2"
                     android:textColor="@color/green"
                     android:textColorHighlight="@color/green"
                     android:textSize="@dimen/size_text" />
Index: app/src/main/res/layout/filter_window.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:gravity=\"center\"\n    android:orientation=\"vertical\">\n\n    <ScrollView\n        android:id=\"@+id/scrollview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_marginTop=\"10dp\">\n        <LinearLayout\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"vertical\">\n        <LinearLayout\n            android:layout_width=\"300dp\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"\n            android:layout_gravity=\"center\"\n            android:orientation=\"horizontal\">\n            <Button\n                android:id=\"@+id/mapFilterSortByPrice\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"@string/sortByPriceFilter\"\n                android:textAllCaps=\"false\"\n                android:padding=\"5dp\"\n                android:layout_marginRight=\"20dp\"\n                android:layout_weight=\"50\"\n                android:background=\"@drawable/bg_filter\"/>\n            <Button\n                android:id=\"@+id/mapFilterSortByAvailability\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"@string/sortByPriceAvailability\"\n                android:textAllCaps=\"false\"\n                android:padding=\"5dp\"\n                android:layout_weight=\"50\"\n                android:background=\"@drawable/bg_filter\"/>\n        </LinearLayout>\n\n            <LinearLayout\n                android:id=\"@+id/pricesortLayout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"50dp\"\n                android:padding=\"10dp\"\n                android:orientation=\"horizontal\"\n                android:visibility=\"visible\">\n                <TextView\n                    android:id=\"@+id/filterMinRange\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_weight=\"40\"\n                    android:textSize=\"10sp\"\n                    android:gravity=\"center\"\n                    android:text=\"\"\n                    android:textColor=\"@color/black\"\n                    android:background=\"@drawable/bg_text\"\n                    android:layout_height=\"match_parent\"\n                    android:focusable=\"false\"/>\n                <com.mohammedalaa.seekbar.DoubleValueSeekBarView\n                    android:id=\"@+id/double_range_seekbar\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    app:r2CurrentMaxValue=\"4990\"\n                    app:r2CurrentMinValue=\"0\"\n                    app:r2barHeight=\"15dp\"\n                    app:r2baseColor=\"@color/navy\"\n                    android:layout_weight=\"20\"\n                    app:r2circleFillColor=\"@color/green\"\n                    app:r2circleRadius=\"15dp\"\n                    app:r2circleTextColor=\"@color/white\"\n                    app:r2circleTextSize=\"@dimen/value_bar_circleTextSize\"\n                    app:r2fillColor=\"@color/green\"\n                    app:r2maxValue=\"5000\"\n                    app:r2maxValueStep=\"10\"\n                    app:r2minValue=\"0\"\n                    app:r2minValueStep=\"5\" />\n                <TextView\n                    android:id=\"@+id/filterMaxRange\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_weight=\"40\"\n                    android:textSize=\"10sp\"\n                    android:text=\"\"\n                    android:textColor=\"@color/black\"\n                    android:gravity=\"center\"\n                    android:background=\"@drawable/bg_text\"\n                    android:layout_height=\"match_parent\"\n                    android:focusable=\"false\"/>\n\n            </LinearLayout>\n\n            <TextView\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"30dp\"\n                android:text=\"@string/mapFilterConnectorType\"\n                android:textStyle=\"bold\"\n                android:layout_gravity=\"center\"\n                android:gravity=\"center\"\n                android:textColor=\"@color/black\"/>\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\">\n                <androidx.recyclerview.widget.RecyclerView\n                    android:id=\"@+id/mapFilterChargerType\"\n                    android:scrollbars=\"vertical\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_centerVertical=\"true\"\n                    android:layout_centerHorizontal=\"true\" />\n            </LinearLayout>\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\">\n                <androidx.recyclerview.widget.RecyclerView\n                    android:id=\"@+id/mapFilterSocketType\"\n                    android:scrollbars=\"vertical\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_centerVertical=\"true\"\n                    android:layout_centerHorizontal=\"true\" />\n\n            </LinearLayout>\n            <TextView\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"30dp\"\n                android:text=\"@string/mapFilterAvailabilityLabel\"\n                android:textStyle=\"bold\"\n                android:layout_gravity=\"center\"\n                android:gravity=\"center\"\n                android:textColor=\"@color/black\"/>\n            <LinearLayout\n                android:id=\"@+id/availabilityLayout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"30dp\"\n                android:layout_gravity=\"center\"\n                android:orientation=\"horizontal\">\n                <CheckBox\n                    android:id=\"@+id/mapFilterMonday\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:background=\"@drawable/checkbox_selector\"\n                    android:button=\"@null\"\n                    android:layout_weight=\"1\"\n                    android:checked=\"false\"\n                    android:gravity=\"center\"\n                    android:layout_margin=\"1dp\"\n                    android:text=\"Mn\"\n                    android:textColor=\"@color/black\"\n                    android:textStyle=\"bold\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterTuesday\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:background=\"@drawable/checkbox_selector\"\n                    android:button=\"@null\"\n                    android:layout_weight=\"1\"\n                    android:layout_margin=\"1dp\"\n                    android:checked=\"false\"\n                    android:gravity=\"center\"\n                    android:text=\"Tu\"\n                    android:textColor=\"@color/black\"\n                    android:textStyle=\"bold\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterWednesday\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:background=\"@drawable/checkbox_selector\"\n                    android:button=\"@null\"\n                    android:layout_weight=\"1\"\n                    android:layout_margin=\"1dp\"\n                    android:checked=\"false\"\n                    android:gravity=\"center\"\n                    android:text=\"We\"\n                    android:textColor=\"@color/black\"\n                    android:textStyle=\"bold\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterThursday\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:background=\"@drawable/checkbox_selector\"\n                    android:button=\"@null\"\n                    android:layout_margin=\"1dp\"\n                    android:layout_weight=\"1\"\n                    android:checked=\"false\"\n                    android:gravity=\"center\"\n                    android:text=\"Th\"\n                    android:textColor=\"@color/black\"\n                    android:textStyle=\"bold\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterFriday\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:background=\"@drawable/checkbox_selector\"\n                    android:button=\"@null\"\n                    android:layout_weight=\"1\"\n                    android:checked=\"false\"\n                    android:gravity=\"center\"\n                    android:text=\"Fr\"\n                    android:layout_margin=\"1dp\"\n                    android:textColor=\"@color/black\"\n                    android:textStyle=\"bold\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterSatursday\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:background=\"@drawable/checkbox_selector\"\n                    android:button=\"@null\"\n                    android:layout_weight=\"1\"\n                    android:checked=\"false\"\n                    android:gravity=\"center\"\n                    android:text=\"Sa\"\n                    android:layout_margin=\"1dp\"\n                    android:textColor=\"@color/black\"\n                    android:textStyle=\"bold\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterSunday\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:background=\"@drawable/checkbox_selector\"\n                    android:button=\"@null\"\n                    android:layout_weight=\"1\"\n                    android:checked=\"false\"\n                    android:gravity=\"center\"\n                    android:text=\"Su\"\n                    android:layout_margin=\"1dp\"\n                    android:textColor=\"@color/black\"\n                    android:textStyle=\"bold\" />\n\n\n            </LinearLayout>\n\n            <TextView\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"30dp\"\n                android:text=\"@string/mapFilterApproxTime\"\n                android:textStyle=\"bold\"\n                android:layout_gravity=\"center\"\n                android:gravity=\"center\"\n                android:textColor=\"@color/black\"/>\n            <LinearLayout\n                android:id=\"@+id/timeSlotLayout\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:gravity=\"left\"\n                android:layout_gravity=\"center\"\n                android:orientation=\"vertical\">\n                <CheckBox\n                    android:id=\"@+id/mapFilterTimeMorning\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:textColor=\"@color/black\"\n                    android:text=\"@string/mapFilterTimeMorning\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterTimeMidDay\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:textColor=\"@color/black\"\n                    android:text=\"@string/mapFilterTimeMidDay\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterTimeAfternoon\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:textColor=\"@color/black\"\n                    android:text=\"@string/mapFilterTimeAfternoon\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterTimeEvening\"\n                    android:layout_width=\"wrap_content\"\n                    android:textColor=\"@color/black\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/mapFilterTimeEvening\" />\n                <CheckBox\n                    android:id=\"@+id/mapFilterTimeOverNight\"\n                    android:layout_width=\"wrap_content\"\n                    android:textColor=\"@color/black\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/mapFilterTimeOverNight\" />\n\n            </LinearLayout>\n            <LinearLayout\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"10dp\"/>\n            <LinearLayout\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_gravity=\"center\"\n                android:orientation=\"horizontal\">\n                <Button\n                    android:id=\"@+id/mapFilterReset\"\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"30dp\"\n                    android:layout_marginStart=\"20dp\"\n                    android:background=\"@drawable/green_round_btn\"\n                    android:text=\"@string/mapFilterReset\"\n                    android:textSize=\"@dimen/size_text\" />\n\n                <Button\n                        android:id=\"@+id/mapFilterApply\"\n                        android:layout_width=\"80dp\"\n                        android:layout_height=\"30dp\"\n                        android:layout_marginStart=\"50dp\"\n                        android:background=\"@drawable/green_round_btn\"\n                        android:text=\"@string/mapFilterApply\"\n                        android:textColorLink=\"@color/green\"\n                        android:textSize=\"@dimen/size_text\" />\n\n            </LinearLayout>\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"20dp\"\n                android:orientation=\"horizontal\"/>\n\n        </LinearLayout>\n    </ScrollView>\n\n</LinearLayout>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/filter_window.xml	(revision 68d9d9a9018671e28448b6dd941bdaf37cf916af)
+++ app/src/main/res/layout/filter_window.xml	(date 1608364746429)
@@ -62,15 +62,16 @@
                     android:background="@drawable/bg_text"
                     android:layout_height="match_parent"
                     android:focusable="false"/>
+
                 <com.mohammedalaa.seekbar.DoubleValueSeekBarView
                     android:id="@+id/double_range_seekbar"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
+                    android:layout_weight="20"
                     app:r2CurrentMaxValue="4990"
                     app:r2CurrentMinValue="0"
-                    app:r2barHeight="15dp"
+                    app:r2barHeight="5dp"
                     app:r2baseColor="@color/navy"
-                    android:layout_weight="20"
                     app:r2circleFillColor="@color/green"
                     app:r2circleRadius="15dp"
                     app:r2circleTextColor="@color/white"
Index: app/src/main/res/layout/map_frag.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:orientation=\"vertical\"\n    app:layout_behavior=\"android.support.design.widget.BottomSheetBehavior\"\n    android:layout_height=\"match_parent\">\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:weightSum=\"10\">\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"40dp\"\n        android:orientation=\"horizontal\">\n        <AutoCompleteTextView\n            android:id=\"@+id/autoCompleteTextViewMap\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:ems=\"10\"\n            android:layout_weight=\"10\"\n            style=\"@android:style/Widget.Material.Light.SearchView\"\n            android:layout_gravity=\"top\"\n            android:paddingStart=\"10dp\"\n            android:layout_margin=\"2dp\"\n            android:background=\"@drawable/bg_rect_tab\"\n            android:hint=\"google search address\"\n            tools:ignore=\"RtlSymmetry\" />\n        <ImageButton\n            android:id=\"@+id/imageButton35\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"50dp\"\n            android:layout_gravity=\"right\"\n            android:layout_weight=\"90\"\n            android:background=\"@android:color/transparent\"\n            app:srcCompat=\"@drawable/filter1\" />\n    </LinearLayout>\n\n\n<LinearLayout\n    android:layout_height=\"match_parent\"\n    android:layout_width=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:layout_weight=\"9\"\n    android:layout_marginTop=\"5dp\">\n\n<!--    <TableRow-->\n<!--        android:id=\"@+id/below_id\"-->\n<!--        android:layout_width=\"match_parent\"-->\n<!--        android:layout_height=\"30dp\"-->\n<!--        android:layout_marginHorizontal=\"10dp\"-->\n<!--        android:layout_marginTop=\"3dp\"-->\n<!--        android:layout_weight=\"1\"-->\n<!--        android:orientation=\"horizontal\">-->\n\n<!--        <Button-->\n<!--            android:id=\"@+id/button120\"-->\n<!--            style=\"@style/Widget.AppCompat.Button.Borderless\"-->\n<!--            android:layout_width=\"wrap_content\"-->\n<!--            android:layout_height=\"30dp\"-->\n<!--            android:layout_gravity=\"center\"-->\n<!--            android:layout_marginLeft=\"5dp\"-->\n<!--            android:layout_weight=\"30\"-->\n<!--            android:background=\"@drawable/bg_filter\"-->\n<!--            android:drawableRight=\"@drawable/idrop_down\"-->\n<!--            android:paddingRight=\"10dp\"-->\n<!--            android:hint=\"@string/button120\"-->\n<!--            android:textColorHint=\"@color/black\"-->\n<!--            android:textSize=\"11sp\" />-->\n\n<!--        <Button-->\n<!--            android:id=\"@+id/button121\"-->\n<!--            style=\"@style/Widget.AppCompat.Button.Borderless\"-->\n<!--            android:layout_width=\"wrap_content\"-->\n<!--            android:layout_height=\"30dp\"-->\n<!--            android:layout_gravity=\"center\"-->\n<!--            android:layout_marginLeft=\"5dp\"-->\n<!--            android:layout_weight=\"30\"-->\n<!--            android:drawableRight=\"@drawable/idrop_down\"-->\n<!--            android:paddingRight=\"10dp\"-->\n<!--            android:background=\"@drawable/bg_filter\"-->\n<!--            android:hint=\"@string/button121\"-->\n<!--            android:textColorHint=\"@color/black\"-->\n<!--            android:textSize=\"11sp\" />-->\n\n<!--        <Button-->\n<!--            android:id=\"@+id/button122\"-->\n<!--            style=\"@style/Widget.AppCompat.Button.Borderless\"-->\n<!--            android:layout_width=\"wrap_content\"-->\n<!--            android:layout_height=\"30dp\"-->\n<!--            android:layout_gravity=\"center\"-->\n<!--            android:layout_marginLeft=\"5dp\"-->\n<!--            android:layout_weight=\"30\"-->\n<!--            android:drawableRight=\"@drawable/idrop_down\"-->\n<!--            android:paddingRight=\"10dp\"-->\n<!--            android:background=\"@drawable/bg_filter\"-->\n<!--            android:hint=\"@string/button122\"-->\n<!--            android:textColorHint=\"@color/black\"-->\n<!--            android:textSize=\"11sp\" />-->\n\n<!--        <ImageButton-->\n<!--            android:id=\"@+id/imageButton35\"-->\n<!--            android:layout_width=\"wrap_content\"-->\n<!--            android:layout_height=\"50dp\"-->\n<!--            android:layout_gravity=\"center\"-->\n<!--            android:layout_marginLeft=\"5dp\"-->\n<!--            android:layout_weight=\"10\"-->\n<!--            android:background=\"@android:color/transparent\"-->\n<!--            app:srcCompat=\"@drawable/filter1\" />-->\n\n<!--    </TableRow>-->\n\n    <fragment\n        android:id=\"@+id/map\"\n        android:name=\"com.google.android.gms.maps.SupportMapFragment\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MapsActivity\" />\n<!--    <TableRow-->\n<!--        android:layout_weight=\"1\"-->\n<!--        android:layout_width=\"match_parent\"-->\n<!--        android:layout_height=\"50dp\"-->\n<!--        android:orientation=\"horizontal\">-->\n\n\n<!--        <ImageButton-->\n<!--            android:layout_width=\"25dp\"-->\n<!--            android:layout_height=\"25dp\"-->\n<!--            android:layout_gravity=\"center\"-->\n<!--            android:layout_weight=\"10\"-->\n<!--            android:layout_marginHorizontal=\"20dp\"-->\n<!--            android:background=\"@android:color/transparent\"-->\n<!--            app:srcCompat=\"@drawable/list_v\" />-->\n\n<!--        <Button-->\n<!--            android:id=\"@+id/button123\"-->\n<!--            style=\"@style/Widget.AppCompat.Button.Borderless\"-->\n<!--            android:layout_width=\"120dp\"-->\n<!--            android:layout_height=\"40dp\"-->\n<!--            android:layout_gravity=\"center|left\"-->\n<!--            android:layout_marginLeft=\"10dp\"-->\n<!--            android:layout_weight=\"30\"-->\n<!--            android:background=\"@android:color/transparent\"-->\n<!--            android:gravity=\"center|left\"-->\n<!--            android:hint=\"@string/button123\"-->\n<!--            android:onClick=\"ShowBottomSheet\"-->\n<!--            android:textSize=\"@dimen/size_text\"-->\n<!--            tools:ignore=\"DuplicateIds\" />-->\n\n<!--        <Button-->\n\n<!--            style=\"@style/Widget.AppCompat.Button.Borderless\"-->\n<!--            android:layout_width=\"120dp\"-->\n<!--            android:layout_height=\"40dp\"-->\n<!--            android:layout_weight=\"160\"-->\n<!--            android:background=\"@android:color/transparent\"-->\n<!--            android:gravity=\"center\"-->\n<!--             />-->\n\n<!--    </TableRow>-->\n</LinearLayout>\n</LinearLayout>\n\n\n</FrameLayout>\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/map_frag.xml	(revision 68d9d9a9018671e28448b6dd941bdaf37cf916af)
+++ app/src/main/res/layout/map_frag.xml	(date 1608364935391)
@@ -16,19 +16,36 @@
         android:layout_height="wrap_content"
         android:layout_marginStart="40dp"
         android:orientation="horizontal">
-        <AutoCompleteTextView
-            android:id="@+id/autoCompleteTextViewMap"
+        <SearchView
+            android:id="@+id/location2"
+            style="@android:style/Widget.Material.Light.SearchView"
             android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:ems="10"
+            android:layout_height="35dp"
+            android:layout_gravity="top"
+            android:textSize="14sp"
             android:layout_weight="10"
-            style="@android:style/Widget.Material.Light.SearchView"
-            android:layout_gravity="top"
-            android:paddingStart="10dp"
-            android:layout_margin="2dp"
+            android:layout_margin="5dp"
             android:background="@drawable/bg_rect_tab"
-            android:hint="google search address"
-            tools:ignore="RtlSymmetry" />
+            android:iconifiedByDefault="false"
+            android:queryHint="Search.."
+            android:textCursorDrawable="@drawable/text_cursor"
+            android:visibility="visible"
+            tools:ignore="NewApi" />
+
+
+        <!--        <AutoCompleteTextView-->
+<!--            android:id="@+id/autoCompleteTextViewMap"-->
+<!--            android:layout_width="match_parent"-->
+<!--            android:layout_height="match_parent"-->
+<!--            android:ems="10"-->
+<!--            android:layout_weight="10"-->
+<!--            style="@android:style/Widget.Material.Light.SearchView"-->
+<!--            android:layout_gravity="top"-->
+<!--            android:paddingStart="10dp"-->
+<!--            android:layout_margin="2dp"-->
+<!--            android:background="@drawable/bg_rect_tab"-->
+<!--            android:hint="google search address"-->
+<!--            tools:ignore="RtlSymmetry" />-->
         <ImageButton
             android:id="@+id/imageButton35"
             android:layout_width="match_parent"
@@ -44,8 +61,7 @@
     android:layout_height="match_parent"
     android:layout_width="match_parent"
     android:orientation="vertical"
-    android:layout_weight="9"
-    android:layout_marginTop="5dp">
+    android:layout_weight="9">
 
 <!--    <TableRow-->
 <!--        android:id="@+id/below_id"-->
